{"version":3,"sources":["logo.svg","theme/index.ts","components/Text.tsx","components/Button.tsx","components/Input.tsx","components/Item.tsx","components/NewItem.tsx","components/List.tsx","components/ThemeToggle.tsx","components/Try.tsx","components/ErrorComponent.tsx","components/OnError.tsx","components/DynamicList.tsx","App.tsx","reportWebVitals.ts","theme/Container.tsx","index.tsx"],"names":["Theme","createContext","color","setColor","Text","props","theme","useContext","style","display","children","Button","onClick","Input","value","onChange","e","target","Item","useState","editingValue","setEditingValue","hash","useMemo","Md5","init","Date","now","onUpdate","onDelete","NewItem","setValue","onAdd","reducer","state","action","type","payload","text","splice","index","List","useReducer","list","setList","useEffect","document","title","length","map","item","ThemeToggle","Try","isError","this","setState","onError","React","Component","ErrorComponent","setIsError","Error","OnError","DynamicList","useErrorBoundary","ErrorBoundary","didCatch","error","renderError","App","className","src","logo","alt","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Container","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28d04a33.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createContext } from \"react\";\r\n\r\nconst Theme = createContext({\r\n  color: \"black\",\r\n  setColor: (color: string) => {},\r\n});\r\n\r\nexport default Theme;\r\n","import React, { useContext } from \"react\";\r\nimport Theme from \"../theme\";\r\n\r\nconst Text = (props: Props) => {\r\n  const theme = useContext(Theme);\r\n  return <span style={{ display: \"inline-block\", color: theme.color }}>{props.children}</span>;\r\n};\r\n\r\nexport interface Props {\r\n  children: string;\r\n}\r\n\r\nexport default Text;\r\n","import React, { useContext } from \"react\";\r\nimport Theme from \"../theme\";\r\n\r\nconst Button = (props: Props) => {\r\n  const theme = useContext(Theme);\r\n  return (\r\n    <button style={{ color: theme.color }} onClick={props.onClick}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport interface Props {\r\n  children: any;\r\n  onClick: () => void;\r\n}\r\n\r\nexport default Button;\r\n","import React, { useContext } from \"react\";\r\nimport Theme from \"../theme\";\r\n\r\nconst Input = (props: Props) => {\r\n  const theme = useContext(Theme);\r\n  return <input style={{ color: theme.color }} value={props.value} onChange={(e) => props.onChange(e.target.value)} />;\r\n};\r\n\r\nexport interface Props {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { Md5 } from \"md5-typescript\";\r\nimport Text from \"./Text\";\r\nimport Button from \"./Button\";\r\nimport Input from \"./Input\";\r\n\r\nconst Item = (props: Props) => {\r\n  const [editingValue, setEditingValue] = useState<string | null>(null);\r\n\r\n  let hash = useMemo(() => {\r\n    return Md5.init(props.children + Date.now());\r\n  }, [props.children]);\r\n\r\n  if (editingValue === null)\r\n    return (\r\n      <div>\r\n        <Text>{props.children}</Text>\r\n        <Button onClick={() => setEditingValue(props.children)}>Edit</Button>\r\n        <Text>{hash}</Text>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <Input value={editingValue} onChange={setEditingValue} />\r\n      <Button\r\n        onClick={() => {\r\n          props.onUpdate(editingValue);\r\n          setEditingValue(null);\r\n        }}\r\n      >\r\n        Save\r\n      </Button>\r\n      <Button onClick={() => setEditingValue(null)}>Cancel</Button>\r\n      <Button onClick={props.onDelete}>Delete</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface Props {\r\n  children: string;\r\n  onUpdate: (value: string) => void;\r\n  onDelete: () => void;\r\n}\r\n\r\nexport default Item;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport Input from \"./Input\";\r\n\r\nconst NewItem = (props: Props) => {\r\n  const [value, setValue] = useState<string | null>(null);\r\n\r\n  if (value === null)\r\n    return (\r\n      <div>\r\n        <Button onClick={() => setValue(\"\")}>Add</Button>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <Input value={value} onChange={setValue} />\r\n      <Button\r\n        onClick={() => {\r\n          props.onAdd(value);\r\n          setValue(null);\r\n        }}\r\n      >\r\n        Add\r\n      </Button>\r\n      <Button onClick={() => setValue(null)}>Cancel</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface Props {\r\n  onAdd: (value: string) => void;\r\n}\r\n\r\nexport default NewItem;\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport Item from \"./Item\";\r\nimport NewItem from \"./NewItem\";\r\n\r\ninterface Action {\r\n  type: string;\r\n  payload: any;\r\n}\r\n\r\nconst reducer = (state: string[], action: Action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return [...state, action.payload.text];\r\n    case \"delete\":\r\n      state.splice(action.payload.index, 1);\r\n      return [...state];\r\n    case \"update\":\r\n      state[action.payload.index] = action.payload.text;\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst List = () => {\r\n  const [list, setList] = useReducer(reducer, []);\r\n\r\n  useEffect(() => {\r\n    document.title = list.length + \" items\";\r\n  }, [list]);\r\n\r\n  return (\r\n    <div>\r\n      {list.map((item, index) => (\r\n        <Item\r\n          key={\"main_list_\" + index}\r\n          onUpdate={(text) => setList({ type: \"update\", payload: { text, index } })}\r\n          onDelete={() => setList({ type: \"delete\", payload: { index } })}\r\n        >\r\n          {item}\r\n        </Item>\r\n      ))}\r\n      <NewItem onAdd={(text) => setList({ type: \"add\", payload: { text } })} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useContext } from \"react\";\r\nimport Theme from \"../theme\";\r\n\r\nconst ThemeToggle = () => {\r\n  const theme = useContext(Theme);\r\n  return (\r\n    <div>\r\n      <button onClick={() => theme.setColor(\"black\")}>BLACK</button>\r\n      <button onClick={() => theme.setColor(\"red\")} style={{ color: \"red\" }}>\r\n        RED\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n","import React from \"react\";\r\n\r\nclass Try extends React.Component<{ onError: any }, { isError: boolean }> {\r\n  state = {\r\n    isError: false,\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ isError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isError) return this.props.onError;\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default Try;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ErrorComponent = () => {\r\n  const [isError, setIsError] = useState(false);\r\n  if (isError) throw new Error(\"MyError!\");\r\n\r\n  return <button onClick={() => setIsError(true)}>MAKE ERROR</button>;\r\n};\r\n\r\nexport default ErrorComponent;\r\n","import React from \"react\";\r\n\r\nconst OnError = () => <h1>Error!</h1>;\r\n\r\nexport default OnError;\r\n","import React from \"react\";\r\nimport useErrorBoundary from \"use-error-boundary\";\r\nimport Try from \"./Try\";\r\nimport ErrorComponent from \"./ErrorComponent\";\r\nimport OnError from \"./OnError\";\r\n\r\nconst DynamicList = () => {\r\n  const { ErrorBoundary, didCatch, error } = useErrorBoundary();\r\n\r\n  return (\r\n    <>\r\n      <Try onError={<OnError />}>\r\n        <ErrorComponent />\r\n      </Try>\r\n      <ErrorBoundary renderError={OnError}>\r\n        <ErrorComponent />\r\n      </ErrorBoundary>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DynamicList;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport List from \"./components/List\";\r\nimport ThemeToggle from \"./components/ThemeToggle\";\r\nimport DynamicList from \"./components/DynamicList\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <List />\r\n      <ThemeToggle />\r\n      <DynamicList />\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useState } from \"react\";\r\nimport Theme from \"./index\";\r\n\r\nconst Container = (props: Props) => {\r\n  const [color, setColor] = useState(\"black\");\r\n  return <Theme.Provider value={{ color, setColor }}>{props.children}</Theme.Provider>;\r\n};\r\n\r\nexport interface Props {\r\n  children: any;\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Theme from \"./theme/Container\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Theme>\r\n      <App />\r\n    </Theme>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}